test_0: self.assertEqual(False, is_happy('a'))
test_1: self.assertEqual(False, is_happy('aa'))
test_2: self.assertEqual(True, is_happy('abcd'))
test_3: self.assertEqual(False, is_happy('aabb'))
test_4: self.assertEqual(True, is_happy('adb'))
test_5: self.assertEqual(False, is_happy('xyy'))
test_6: self.assertEqual(True, is_happy('iopaxpoi'))
test_7: self.assertEqual(False, is_happy('iopaxioi'))
test_8: self.assertEqual(True, is_happy('xyz'))
test_9: self.assertEqual(False, is_happy('agbebf'))
test_10: self.assertEqual(False, is_happy('xy'))
test_11: self.assertEqual(False, is_happy('xxy'))
test_12: self.assertEqual(True, is_happy(' this is hb'))
test_13: self.assertEqual(False, is_happy('tibacacbacbm'))
test_14: self.assertEqual(False, is_happy('baUee'))
test_15: self.assertEqual(True, is_happy('abcdefghijklmde'))
test_16: self.assertEqual(True, is_happy('cabcabc'))
test_17: self.assertEqual(False, is_happy('bacacbacb'))
test_18: self.assertEqual(True, is_happy(' this is bat'))
test_19: self.assertEqual(False, is_happy('x'))
test_20: self.assertEqual(False, is_happy('yyyyyy'))
test_21: self.assertEqual(False, is_happy('qwertyuiopasdfghjklzxcvbnmqwertlyuiopasdfghjklzxcvbqwertyuiopasdfghjklzxcvbnmqwertyabcabuiopasdfghjkaaaaabbbdddccccaaeeeedddccccaabcabcabcabcabcabbcabcabcabcacbcaaaaabbbbccccdeeeddddccccbbbbaaaaaaaabbbbccccdeeeddddccccbbbbaaaaeeeedddccccaaeeeedddccccaabcabcabcabcabcabcabcabcabcabcabcabcaabcabbcabcabcababcabbcabcabcababcabbbaaaaaaaabbbbccccdeeeddddccabcabcaabcccaaabbddeefffbcabcaabcabcabcabcabcabcabcabcabcabcabcabcabccb11223344556abcabcabcabcabcabcabcabcabcabaaaaabbbbccccdeeeddddccccbbbbaaaaaaaabbbbccccdeeeddddccccbbbbaaaaeeeedddccccaaeeeedddccccacabcabcabcabbcabcabcab65677889900aad4dbbccddeeaabbccddeebbbaaaaeeeedddccccaaeeeedddccccalzxcvb'))
