test_0: self.assertEqual(True, has_close_elements([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3))
test_1: self.assertEqual(False, has_close_elements([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05))
test_2: self.assertEqual(True, has_close_elements([1.0, 2.0, 5.9, 4.0, 5.0], 0.95))
test_3: self.assertEqual(False, has_close_elements([1.0, 2.0, 5.9, 4.0, 5.0], 0.8))
test_4: self.assertEqual(True, has_close_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1))
test_5: self.assertEqual(True, has_close_elements([1.1, 2.2, 3.1, 4.1, 5.1], 1.0))
test_6: self.assertEqual(False, has_close_elements([1.1, 2.2, 3.1, 4.1, 5.1], 0.5))
test_7: self.assertEqual(True, has_close_elements([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3))
test_8: self.assertEqual(False, has_close_elements([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05))
test_9: self.assertEqual(True, has_close_elements([1.0, 2.0, 5.9, 4.0, 5.0], 0.95))
test_10: self.assertEqual(False, has_close_elements([1.0, 2.0, 5.9, 4.0, 5.0], 0.8))
test_11: self.assertEqual(True, has_close_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1))
test_12: self.assertEqual(True, has_close_elements([1.1, 2.2, 3.1, 4.1, 5.1], 1.0))
test_13: self.assertEqual(False, has_close_elements([1.1, 2.2, 3.1, 4.1, 5.1], 0.5))
