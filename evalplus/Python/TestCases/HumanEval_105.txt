test_0: self.assertEqual(['Eight', 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One'], by_length([2, 1, 1, 4, 5, 8, 2, 3]))
test_1: self.assertEqual([], by_length([]))
test_2: self.assertEqual(['One'], by_length([1, -1, 55]))
test_3: self.assertEqual(['Three', 'Two', 'One'], by_length([1, -1, 3, 2]))
test_4: self.assertEqual(['Nine', 'Eight', 'Four'], by_length([9, 4, 8]))
test_5: self.assertEqual(['Nine', 'Eight', 'Seven', 'Six', 'Five', 'Four', 'Three', 'Two', 'One'], by_length([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))
test_6: self.assertEqual(['Six', 'Five'], by_length([-1, 0, 5, 6, 10]))
test_7: self.assertEqual(['Three', 'Three', 'Three', 'Three', 'Three', 'Three'], by_length([3, 3, 3, 3, 3, 3]))
test_8: self.assertEqual(['Eight', 'Seven', 'Six', 'Five', 'Four', 'Four', 'Three', 'One'], by_length([4, 8, 7, 6, 5, 4, 3, 1]))
test_9: self.assertEqual([], by_length([0, 10, 11, 12, 13, 14, 15, 16, -1, -5, 20, 25, 30, 100, 200, 300]))
test_10: self.assertEqual(['Four', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three', 'Three'], by_length([3, 3, 3, 3, 4, 3, 3, 3, 3]))
test_11: self.assertEqual(['Seven'], by_length([0, 10, 11, 12, 13, 7, 15, 16, -1, -5, 20, 25, 30, 100, 300, 16, 0]))
test_12: self.assertEqual(['One', 'One'], by_length([-1, -3, 1, -1, 0, -4, -5, -6, -7, -8, 1, -9, 0]))
test_13: self.assertEqual(['Two', 'One'], by_length([2, 71, 1, 64, 90, 24, 41]))
test_14: self.assertEqual(['Nine', 'Eight', 'Six', 'Five', 'Five', 'Two', 'One', 'One'], by_length([9, 5, 2, 1, 1, 5, 6, 0, 8]))
test_15: self.assertEqual(['Seven'], by_length([7]))
