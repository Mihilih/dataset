test_0: self.assertEqual(['A+', 'B', 'C-', 'C', 'A-'], numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))
test_1: self.assertEqual(['D+'], numerical_letter_grade([1.2]))
test_2: self.assertEqual(['D-'], numerical_letter_grade([0.5]))
test_3: self.assertEqual(['E'], numerical_letter_grade([0.0]))
test_4: self.assertEqual(['D', 'D-', 'C-', 'B', 'B+'], numerical_letter_grade([1, 0.3, 1.5, 2.8, 3.3]))
test_5: self.assertEqual(['E', 'D-'], numerical_letter_grade([0, 0.7]))
test_6: self.assertEqual(['A+', 'A', 'A-', 'A-', 'B+', 'B', 'B', 'B-', 'B-', 'C+', 'C+', 'C', 'D', 'C', 'C-', 'C-', 'D+', 'A-', 'D+', 'D-', 'D-', 'E'], numerical_letter_grade([4.0, 3.9, 3.7, 3.31, 3.29, 3.0, 2.99, 2.7, 2.69, 2.3, 2.29, 2.0, 0.8, 1.99, 1.7, 1.69, 1.3, 3.3462428245777955, 1.29, 0.7, 0.69, 0.0]))
test_7: self.assertEqual(['A', 'B-', 'A', 'C+', 'D'], numerical_letter_grade([3.8, 2.5, 3.9, 2.2, 1.0]))
test_8: self.assertEqual(['B+', 'B-', 'C', 'D', 'D-', 'A+'], numerical_letter_grade([3.1, 2.7, 1.8, 0.9, 0.5, 4.0]))
test_9: self.assertEqual(['B+', 'B+', 'B', 'B', 'B', 'B-'], numerical_letter_grade([3.2, 3.1, 3.0, 2.9, 2.8, 2.7]))
test_10: self.assertEqual(['A+', 'A+', 'A+', 'A+'], numerical_letter_grade([4.0, 4.0, 4.0, 4.0]))
test_11: self.assertEqual(['C-', 'C-', 'C-', 'C-'], numerical_letter_grade([1.7, 1.7, 1.7, 1.7]))
test_12: self.assertEqual(['C', 'C', 'C', 'C'], numerical_letter_grade([2.0, 2.0, 2.0, 2.0]))
test_13: self.assertEqual(['A', 'A+', 'A+', 'A+', 'A+', 'A+'], numerical_letter_grade([3.709427582366981, 4.0, 4.0, 4.0, 4.0, 4.0]))
test_14: self.assertEqual(['B+', 'B+', 'B', 'D+', 'A', 'B+'], numerical_letter_grade([3.2, 3.1, 3.0, 1.042839384499805, 3.7622258594833253, 3.1]))
test_15: self.assertEqual(['B+', 'A', 'B', 'B', 'B', 'A'], numerical_letter_grade([3.2, 3.8, 3.0, 2.9, 2.8, 3.763604414675102]))
test_16: self.assertEqual(['A', 'B-', 'C+', 'A', 'B-'], numerical_letter_grade([3.8, 2.5, 2.2, 3.8, 2.5]))
test_17: self.assertEqual(['A+', 'A', 'A', 'A-', 'A-', 'A-', 'A-', 'B+', 'B+', 'B+', 'B', 'B', 'B', 'B-', 'B-', 'B-', 'B-', 'C+', 'C+', 'C+', 'C', 'C', 'C', 'C-', 'C-', 'C-', 'C-', 'D+', 'D+', 'D+', 'D', 'D', 'D', 'D-', 'D-', 'D-', 'D-', 'D-', 'D-', 'D-', 'E'], numerical_letter_grade([4.0, 3.9, 3.8, 3.7, 3.6, 3.5, 3.4, 3.3, 3.2, 3.1, 3.0, 2.9, 2.8, 2.7, 2.6, 2.5, 2.4, 2.3, 2.2, 2.1, 2.0, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]))
test_18: self.assertEqual(['A+', 'A-', 'A', 'A', 'A-', 'A-', 'C+', 'B', 'B', 'B-', 'B-', 'C+', 'C+', 'C', 'C', 'C-', 'C-', 'D+', 'D+', 'D-', 'D-', 'E'], numerical_letter_grade([4.0, 3.5182986408219863, 3.9, 3.8, 3.7, 3.31, 2.2, 3.0, 2.99, 2.7, 2.69, 2.3, 2.29, 2.0, 1.99, 1.7, 1.69, 1.3, 1.29, 0.7, 0.69, 0.0]))
test_19: self.assertEqual(['E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E', 'E'], numerical_letter_grade([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
test_20: self.assertEqual([], numerical_letter_grade(''))
