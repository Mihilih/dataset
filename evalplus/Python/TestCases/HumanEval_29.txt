test_0: self.assertEqual([], filter_by_prefix([], 'john'))
test_1: self.assertEqual(['xxx', 'xxxAAA', 'xxx'], filter_by_prefix(['xxx', 'asd', 'xxy', 'john doe', 'xxxAAA', 'xxx'], 'xxx'))
test_2: self.assertEqual(['abc', 'abcd', 'abcde'], filter_by_prefix(['abc', 'abcd', 'abcde'], 'abc'))
test_3: self.assertEqual(['qwerty', 'qwertyuiop'], filter_by_prefix(['qwerty', 'QwertY', 'qwertyuiop', 'QWERTYUIOP', 'asdfgh', 'ASDFGH', 'as fgh', 'ASD FGH'], 'qwe'))
test_4: self.assertEqual(['a', 'p', 'r', 'i', 'c', 'c', 'o', 't'], filter_by_prefix('apriccot', ''))
test_5: self.assertEqual(['a', 'ab', 'abc'], filter_by_prefix(['a', 'ab', 'abc', 'ba', 'bb', 'bc'], 'a'))
test_6: self.assertEqual([], filter_by_prefix('', 'aa'))
test_7: self.assertEqual(['', ' ', '\n', '\t', 'a', 'ab', 'abc', 'abcde'], filter_by_prefix(['', ' ', '\n', '\t', 'a', 'ab', 'abc', 'abcde'], ''))
test_8: self.assertEqual(['ASDFGH'], filter_by_prefix(['qwerty', 'QwertY', 'qwertyuiop', 'QWERTYUIOP', 'asdfgh', 'ASDFGH', 'as fgh', 'ASD FGH'], 'ASDFGH'))
test_9: self.assertEqual([], filter_by_prefix('f', ' '))
test_10: self.assertEqual(['zzz', 'zzz', 'zzz'], filter_by_prefix(['zzz', 'zzz', 'zzz'], 'z'))
